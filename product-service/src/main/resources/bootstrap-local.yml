server:
  port: 8081

spring:
  application:
    name: product-service
  profiles:
    active:
      - local,docker
  autoconfigure:
    exclude:
      - org.springframework.cloud.aws.autoconfigure.context.ContextInstanceDataAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextStackAutoConfiguration
      - org.springframework.cloud.aws.autoconfigure.context.ContextRegionProviderAutoConfiguration
  cloud:
    config:
      discovery:
        enabled: true
        service-id: config-server
      fail-fast: false # Don't need to force get properties from config-server, except Production
      request-connect-timeout: 10
      retry:
        initial-interval: 10000
        max-attempts: 10
        max-interval: 10000
        multiplier: 1.5
  datasource:
    platform: postgres
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5432/product-service
    username: postgres
    password: 123456
  jpa:
    database: POSTGRESQL
    show-sql: true
    generate-ddl: true
    hibernate.ddl-auto: none
    properties.hibernate.jdbc.lob.non_contextual_creation: true
    database-platform: org.hibernate.dialect.PostgreSQL9Dialect
  liquibase:
    contexts: local, docker, prod
  servlet:
    multipart:
      enabled: true
      file-size-threshold: 2KB
      max-file-size: 20MB
      max-request-size: 25MB
  redis:
    host: localhost
    post: 6379
  elasticsearch:
    rest:
      connection-timeout: 30
      uris:
        - localhost:9200

cloud:
  aws:
    region: ap-southeast-1
    credentials:
      access-key: AKIAVMP7LZXQD7IO2OY4
      secret-key: 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

application:
  localStoragePath: C:\spring-cloud\ecommerce\storage
  remoteStorage:
    bucketName: ecommerce-microservice-bucket
    publicUrl: https://ecommerce-microservice-bucket.s3.ap-southeast-1.amazonaws.com

management:
  endpoints:
    web:
      cors:
        allowed-origins:
          - http://localhost:3000
      exposure:
        include: "*"

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka
    registryFetchIntervalSeconds: 20
    eureka-connection-idle-timeout-seconds: 10
    eureka-server-connect-timeout-seconds: 30
    healthcheck:
      enabled: true